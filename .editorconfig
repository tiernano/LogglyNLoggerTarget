
# top-most EditorConfig file
root = true

# Code files
[*.cs]

# Use hard or soft tabs ["tab", "space"]
indent_style                                                                 = tab

# Size of a single indent [an integer, "tab"]
indent_size                                                                  = tab

# Number of columns representing a tab character [an integer]
tab_width                                                                    = 4

# Automatically trim whitespace
trim_trailing_whitespace                                                     = true

# all properties, methods and events must be in pascal case
dotnet_naming_rule.members_are_pascal_case.severity                          = error
dotnet_naming_rule.members_are_pascal_case.symbols                           = member_symbol
dotnet_naming_rule.members_are_pascal_case.style                             = member_style
dotnet_naming_symbols.member_symbol.applicable_kinds                         = method, property, event
dotnet_naming_style.member_style.capitalization                              = pascal_case

# All interfaces should start with upper case I followed by pascal case
dotnet_naming_rule.interfaces_should_have_prefix.severity                    = error
dotnet_naming_rule.interfaces_should_have_prefix.symbols                     = interfaces
dotnet_naming_rule.interfaces_should_have_prefix.style                       = interface_prefix_style
dotnet_naming_symbols.interfaces.applicable_kinds                            = interface
dotnet_naming_style.interface_prefix_style.required_prefix                   = I
dotnet_naming_style.interface_prefix_style.capitalization                    = pascal_case

# all class, struct, enum and delegate must be in pascal case
dotnet_naming_rule.non_interface_types_are_pascal_case.severity              = error
dotnet_naming_rule.non_interface_types_are_pascal_case.symbols               = non_interface_type_symbol
dotnet_naming_rule.non_interface_types_are_pascal_case.style                 = non_interface_type_style
dotnet_naming_symbols.non_interface_type_symbol.applicable_kinds             = class,struct,enum,delegate
dotnet_naming_style.non_interface_type_style.capitalization                  = pascal_case

## All public static member variables should be in Pascal Case
dotnet_naming_rule.public_static_member_fields_should_have_prefix.severity   = error
dotnet_naming_rule.public_static_member_fields_should_have_prefix.symbols    = public_static_member_fields
dotnet_naming_rule.public_static_member_fields_should_have_prefix.style      = public_static_member_fields_prefix_style
dotnet_naming_symbols.public_static_member_fields.applicable_kinds           = field
dotnet_naming_symbols.public_static_member_fields.applicable_accessibilities = public
dotnet_naming_symbols.public_static_member_fields.required_modifiers         = static
dotnet_naming_style.public_static_member_fields_prefix_style.capitalization  = pascal_case

## All public const member variables should be in Pascal Case
dotnet_naming_rule.public_const_member_fields_should_have_prefix.severity    = error
dotnet_naming_rule.public_const_member_fields_should_have_prefix.symbols     = public_const_member_fields
dotnet_naming_rule.public_const_member_fields_should_have_prefix.style       = public_const_member_fields_prefix_style
dotnet_naming_symbols.public_const_member_fields.applicable_kinds            = field
dotnet_naming_symbols.public_const_member_fields.applicable_accessibilities  = public
dotnet_naming_symbols.public_const_member_fields.required_modifiers          = const
dotnet_naming_style.public_const_member_fields_prefix_style.capitalization   = pascal_case

# All other member variables should start with lower case m followed by pascal case
dotnet_naming_rule.member_fields_should_have_prefix.severity                 = error
dotnet_naming_rule.member_fields_should_have_prefix.symbols                  = member_fields
dotnet_naming_rule.member_fields_should_have_prefix.style                    = member_fields_prefix_style
dotnet_naming_symbols.member_fields.applicable_kinds                         = field
dotnet_naming_style.member_fields_prefix_style.required_prefix               = m
dotnet_naming_style.member_fields_prefix_style.capitalization                = pascal_case

# All parameters should be in camel case
dotnet_naming_rule.parameter_should_be_in_camel.severity                     = error
dotnet_naming_rule.parameter_should_be_in_camel.symbols                      = parameter
dotnet_naming_rule.parameter_should_be_in_camel.style                        = parameter_style
dotnet_naming_symbols.parameter.applicable_kinds                             = parameter
dotnet_naming_style.parameter_style.capitalization                           = camel_case

# Prefer "var" everywhere
csharp_style_var_for_built_in_types                                          = true : suggestion
csharp_style_var_when_type_is_apparent                                       = true : suggestion
csharp_style_var_elsewhere                                                   = true : suggestion

# Prefer method-like constructs to have a block body
csharp_style_expression_bodied_methods                                       = false : none
csharp_style_expression_bodied_constructors                                  = false : none
csharp_style_expression_bodied_operators                                     = false : none

# Prefer property-like constructs to have an expression-body
csharp_style_expression_bodied_properties                                    = true : suggestion
csharp_style_expression_bodied_indexers                                      = true : suggestion
csharp_style_expression_bodied_accessors                                     = true : suggestion

# Suggest more modern language features when available
csharp_style_pattern_matching_over_is_with_cast_check                        = true : suggestion
csharp_style_pattern_matching_over_as_with_null_check                        = true : suggestion
csharp_style_inlined_variable_declaration                                    = true : suggestion
csharp_style_throw_expression                                                = true : suggestion
csharp_style_conditional_delegate_call                                       = true : suggestion

# Avoid "this." if not necessary
dotnet_style_qualification_for_field                                         = false : error
dotnet_style_qualification_for_property                                      = false : error
dotnet_style_qualification_for_method                                        = false : error
dotnet_style_qualification_for_event                                         = false : error

# Use language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members                   = true : warning
dotnet_style_predefined_type_for_member_access                               = true : warning

# Suggest more modern language features when available
dotnet_style_object_initializer                                              = true : suggestion
dotnet_style_collection_initializer                                          = true : suggestion
dotnet_style_coalesce_expression                                             = true : suggestion
dotnet_style_null_propagation                                                = true : suggestion
dotnet_style_explicit_tuple_names                                            = true : error

# Preference for not using braces if not required
csharp_prefer_braces                                                         = false : suggestion

# Newline settings
csharp_new_line_before_open_brace                                            = all
csharp_new_line_before_else                                                  = true
csharp_new_line_before_catch                                                 = true
csharp_new_line_before_finally                                               = true
csharp_new_line_before_members_in_object_initializers                        = true
csharp_new_line_before_members_in_anonymous_types                            = true

# Sort using and Import directives with System.* appearing first
dotnet_sort_system_directives_first                                          = true

csharp_new_line_within_query_expression_clauses                              = true
csharp_indent_case_contents                                                  = true
csharp_indent_switch_labels                                                  = true
csharp_indent_labels                                                         = one_less
csharp_space_after_cast                                                      = true
csharp_space_after_keywords_in_control_flow_statements                       = true
csharp_space_between_method_declaration_parameter_list_parentheses           = false
csharp_preserve_single_line_statements                                       = false
csharp_preserve_single_line_blocks                                           = true














